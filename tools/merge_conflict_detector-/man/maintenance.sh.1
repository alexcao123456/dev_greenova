.TH MAINTENANCE.SH 1 "May 2025" "merge_detector 1.0" "Git Tools"
.SH NAME
maintenance.sh \- comprehensive Git repository maintenance and optimization
.SH SYNOPSIS
.B maintenance.sh
[\fIOPTION\fR]... [\fIMAINTENANCE_TYPE\fR]
.SH DESCRIPTION
.B maintenance.sh
provides comprehensive maintenance operations for Git repositories, including cleanup, optimization, remote synchronization, and repository health checks. It implements best practices for repository maintenance and supports both interactive and automated usage.

The script performs various maintenance operations:
.IP \(bu 2
Repository cleanup and garbage collection
.IP \(bu 2
Branch pruning and remote synchronization
.IP \(bu 2
Index optimization and object packing
.IP \(bu 2
Repository verification and health checks
.IP \(bu 2
Upstream synchronization and conflict resolution

.SH OPTIONS
.TP
.BR \-v ", " \-\-verbose
Enable verbose output showing detailed operations

.TP
.BR \-q ", " \-\-quiet
Suppress non-essential output messages

.TP
.BR \-n ", " \-\-dry\-run
Show what would be done without making changes

.TP
.BR \-f ", " \-\-force
Force operations that normally require confirmation

.TP
.BR \-a ", " \-\-aggressive
Use aggressive optimization strategies

.TP
.BR \-p ", " \-\-prune
Enable aggressive pruning of obsolete objects

.TP
.BR \-h ", " \-\-help
Display help message and exit

.TP
.BR \-V ", " \-\-version
Display version information and exit

.SH MAINTENANCE TYPES
.TP
.B full
Complete maintenance including all operations (default)

.TP
.B cleanup
Basic cleanup operations:
.RS
.IP \(bu 2
Remove untracked files and directories
.IP \(bu 2
Clean working directory
.IP \(bu 2
Prune stale remote references
.RE

.TP
.B optimization
Repository optimization:
.RS
.IP \(bu 2
Garbage collection and object packing
.IP \(bu 2
Index optimization
.IP \(bu 2
Reference packing
.IP \(bu 2
Delta compression
.RE

.TP
.B sync
Remote synchronization:
.RS
.IP \(bu 2
Fetch from all remotes
.IP \(bu 2
Update remote tracking branches
.IP \(bu 2
Synchronize with upstream
.RE

.TP
.B verify
Repository verification:
.RS
.IP \(bu 2
Check repository integrity
.IP \(bu 2
Verify object consistency
.IP \(bu 2
Validate references
.IP \(bu 2
Check for corruption
.RE

.TP
.B branches
Branch maintenance:
.RS
.IP \(bu 2
Prune merged branches
.IP \(bu 2
Clean up remote tracking branches
.IP \(bu 2
Remove obsolete references
.RE

.SH EXAMPLES
.TP
Run complete maintenance:
.B maintenance.sh

.TP
Perform cleanup with verbose output:
.B maintenance.sh \-\-verbose cleanup

.TP
Dry run of aggressive optimization:
.B maintenance.sh \-\-dry\-run \-\-aggressive optimization

.TP
Force branch pruning:
.B maintenance.sh \-\-force branches

.TP
Quiet synchronization:
.B maintenance.sh \-\-quiet sync

.TP
Repository verification:
.B maintenance.sh verify

.SH OPERATIONS PERFORMED
.SS Cleanup Operations
.IP \(bu 2
\fBgit clean\fR \- Remove untracked files
.IP \(bu 2
\fBgit remote prune\fR \- Remove stale remote references
.IP \(bu 2
\fBgit reflog expire\fR \- Clean up reference logs
.IP \(bu 2
Working directory cleanup

.SS Optimization Operations
.IP \(bu 2
\fBgit gc\fR \- Garbage collection and object packing
.IP \(bu 2
\fBgit repack\fR \- Optimize object storage
.IP \(bu 2
\fBgit pack\-refs\fR \- Pack reference files
.IP \(bu 2
Index optimization and rebuilding

.SS Synchronization Operations
.IP \(bu 2
\fBgit fetch \-\-all\fR \- Fetch from all remotes
.IP \(bu 2
\fBgit remote update\fR \- Update remote references
.IP \(bu 2
Upstream branch synchronization
.IP \(bu 2
Remote tracking branch updates

.SS Verification Operations
.IP \(bu 2
\fBgit fsck\fR \- File system check
.IP \(bu 2
\fBgit verify\-pack\fR \- Verify packed objects
.IP \(bu 2
Reference integrity checks
.IP \(bu 2
Repository structure validation

.SH SAFETY FEATURES
.B maintenance.sh
includes several safety mechanisms:
.IP \(bu 2
Dry run mode for testing operations
.IP \(bu 2
Automatic backup of critical references
.IP \(bu 2
Repository state validation before operations
.IP \(bu 2
Rollback capabilities for failed operations
.IP \(bu 2
Confirmation prompts for destructive operations

.SH EXIT STATUS
.TP
0
All maintenance operations completed successfully
.TP
1
General error or invalid arguments
.TP
2
Repository access error or permission denied
.TP
3
Not a Git repository
.TP
4
Maintenance operation failed

.SH FILES
.TP
.I .git/
Git repository directory (required)
.TP
.I .git/config
Repository configuration (used for remote operations)
.TP
.I .maintenance_history
Optional maintenance log file (if logging enabled)

.SH ENVIRONMENT
.TP
.B GIT_DIR
Override Git directory location
.TP
.B MAINTENANCE_LOG
Enable logging to specified file
.TP
.B MAINTENANCE_BACKUP
Directory for automatic backups

.SH BEST PRACTICES
.SS Regular Maintenance
.IP \(bu 2
Run weekly cleanup operations
.IP \(bu 2
Monthly optimization for active repositories
.IP \(bu 2
Daily synchronization for collaborative projects

.SS Repository Health
.IP \(bu 2
Regular verification checks
.IP \(bu 2
Monitor repository size growth
.IP \(bu 2
Clean up obsolete branches promptly

.SS Performance Optimization
.IP \(bu 2
Use aggressive mode for large repositories
.IP \(bu 2
Schedule maintenance during low-activity periods
.IP \(bu 2
Consider repository splitting for very large codebases

.SH SEE ALSO
.BR git (1),
.BR git-gc (1),
.BR git-fsck (1),
.BR git-prune (1),
.BR git-repack (1),
.BR merge_detector (1)

.SH BUGS
Report bugs to the project issue tracker.

Known limitations:
.IP \(bu 2
Some operations require write access to repository
.IP \(bu 2
Large repositories may require significant time
.IP \(bu 2
Network operations depend on remote availability

.SH AUTHOR
Written for comprehensive Git repository maintenance automation.

.SH COPYRIGHT
This is free software under the ISC license. You are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
